openapi: 3.1.0
info:
  title: Data GPT Orchestrator API
  version: "0.1.0"
servers:
  - url: http://localhost:8787
paths:
  /health:
    get:
      summary: Liveness
      responses:
        '200':
          description: ok
  /status:
    get:
      summary: Extended status
      responses:
        '200':
          description: ok
  /orchestrate/run:
    post:
      summary: Run the orchestrator on a task
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [task]
              properties:
                task: { type: string }
      responses:
        '200':
          description: ok
  /web/search:
    get:
      summary: Web search
      parameters:
        - in: query
          name: q
          required: true
          schema: { type: string }
        - in: query
          name: provider
          schema: { type: string, enum: [serpapi, duckduckgo] }
      responses:
        '200':
          description: ok
  /http/get:
    get:
      summary: Fetch page
      parameters:
        - in: query
          name: url
          required: true
          schema: { type: string, format: uri }
      responses:
        '200':
          description: ok
  /llm/gemini/complete:
    post:
      summary: Gemini completion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [prompt]
              properties:
                prompt: { type: string }
                model: { type: string }
      responses:
        '200':
          description: ok
  /privacy:
    get:
      summary: Privacy Policy
      responses: { '200': { description: ok } }
  /terms:
    get:
      summary: Terms of Service
      responses: { '200': { description: ok } }
  /cookies:
    get:
      summary: Cookies Policy
      responses: { '200': { description: ok } }
  /.well-known/security.txt:
    get:
      summary: security.txt
      responses: { '200': { description: ok } }
  /robots.txt:
    get:
      summary: robots.txt
      responses: { '200': { description: ok } }
  /gdpr/export:
    post:
      summary: GDPR export request (logged)
      responses: { '200': { description: ok } }
  /gdpr/delete:
    post:
      summary: GDPR delete request (logged)
      responses: { '200': { description: ok } }
  /ccpa/opt-out:
    post:
      summary: CCPA opt-out request (logged)
      responses: { '200': { description: ok } }
  /envcheck:
    get:
      summary: Env presence booleans
      responses: { '200': { description: ok } }
  /docs:
    get:
      summary: Swagger UI
      responses: { '200': { description: ok } }
  /openapi.yaml:
    get:
      summary: Download OpenAPI file
      responses: { '200': { description: ok } }
